{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\wampp\\\\www\\\\task\\\\src\\\\App.js\";\nimport React from \"react\";\n\nclass Counter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        value: 0,\n        id: 0\n      }, {\n        value: 0,\n        id: 1\n      }, {\n        value: 0,\n        id: 2\n      }]\n    };\n\n    this.incr = i => {\n      this.setState(({\n        counters\n      }) => {\n        const newCount = counters.map(({\n          id,\n          value\n        }) => ({\n          id,\n          value\n        }));\n        newCount[i] = {\n          value: newCount[i].value + 1,\n          id: i\n        };\n        return {\n          counters: newCount\n        };\n      });\n    };\n  }\n\n  render() {\n    const {\n      counters\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: counters.map((id, value) => /*#__PURE__*/_jsxDEV(Counter2, {\n        name: `counter`,\n        counter: value,\n        incr: this.incr\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction Counter2(props) {\n  const {\n    counter,\n    incr,\n    name\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"counters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"the counter value is \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incr,\n      name: name,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Counter2;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter2\");","map":{"version":3,"sources":["F:/wampp/www/task/src/App.js"],"names":["React","Counter","Component","state","counters","value","id","incr","i","setState","newCount","map","render","Counter2","props","counter","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE1B;AAEJC,MAAAA,QAAQ,EAAE,CACN;AAAEC,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,EAAE,EAAE;AAAhB,OADM,EAEN;AAAED,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,EAAE,EAAE;AAAhB,OAFM,EAGN;AAAED,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,EAAE,EAAE;AAAhB,OAHM;AAFN,KAF0B;;AAAA,SAYlCC,IAZkC,GAY1BC,CAAD,IAAO;AAEV,WAAKC,QAAL,CAAc,CAAC;AAAEL,QAAAA;AAAF,OAAD,KAAkB;AAC5B,cAAMM,QAAQ,GAAGN,QAAQ,CAACO,GAAT,CAAa,CAAC;AAACL,UAAAA,EAAD;AAAKD,UAAAA;AAAL,SAAD,MAAgB;AAACC,UAAAA,EAAD;AAAKD,UAAAA;AAAL,SAAhB,CAAb,CAAjB;AACAK,QAAAA,QAAQ,CAACF,CAAD,CAAR,GAAc;AAAEH,UAAAA,KAAK,EAAEK,QAAQ,CAACF,CAAD,CAAR,CAAYH,KAAZ,GAAmB,CAA5B;AAA+BC,UAAAA,EAAE,EAAEE;AAAnC,SAAd;AACA,eAAO;AAAEJ,UAAAA,QAAQ,EAAEM;AAAZ,SAAP;AACH,OAJD;AAKH,KAnBiC;AAAA;;AAsBlCE,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAER,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AAEA,wBACI;AAAA,gBAEKC,QAAQ,CAACO,GAAT,CAAa,CAACL,EAAD,EAAKD,KAAL,kBAEV,QAAC,QAAD;AAEI,QAAA,IAAI,EAAG,SAFX;AAGI,QAAA,OAAO,EAAEA,KAHb;AAII,QAAA,IAAI,EAAE,KAAKE;AAJf,SACSD,EADT;AAAA;AAAA;AAAA;AAAA,cAFH;AAFL;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAxCiC;;AA4CtC,SAASO,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAAEC,IAAAA,OAAF;AAAWR,IAAAA,IAAX;AAAiBS,IAAAA;AAAjB,MAA0BF,KAAhC;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,0CAAyBC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAER,IAAjB;AAAuB,MAAA,IAAI,EAAES,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAQH;;KAVQH,Q;AAYT,eAAeZ,OAAf","sourcesContent":["import React from \"react\";\n\nclass Counter extends React.Component {\n\n    state = {\n\n        counters: [\n            { value: 0, id: 0 },\n            { value: 0, id: 1 },\n            { value: 0, id: 2 },\n        ],\n    };\n\n\n    incr = (i) => {\n\n        this.setState(({ counters }) => {\n            const newCount = counters.map(({id, value})=>({id, value}));\n            newCount[i] = { value: newCount[i].value +1, id: i};\n            return { counters: newCount };\n        });\n    }\n\n\n    render() {\n\n        const { counters } = this.state;\n\n        return (\n            <div>\n\n                {counters.map((id, value) => (\n\n                    <Counter2\n                        key={id}\n                        name={`counter`}\n                        counter={value}\n                        incr={this.incr}\n                    />\n                ))}\n            </div>\n        );\n    }\n\n}\n\nfunction Counter2(props) {\n    const { counter, incr, name } = props;\n    return (\n        <>\n            <h1>counters</h1>\n            <p>the counter value is {counter}</p>\n            <button onClick={incr} name={name}>+</button>\n            {/* <button onClick={() => decr(index)}>-</button> */}\n        </>\n    );\n}\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}